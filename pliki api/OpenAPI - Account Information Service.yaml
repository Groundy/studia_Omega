---
swagger: "2.0"
info:
  version: 1.5.5
  title: OpenAPI - Account Information Service
  description: |-
    Account Information Service (AIS) – usługa dostępu do informacji o rachunku, zdefiniowana w art. 66 PSD2.

    Interfejs API umożliwia:
    - uzyskanie wybranych informacji dotyczących rachunku płatniczego
    - uzyskanie danych dotyczących historii transakcji
    - uzyskanie danych szczegółów operacji
    Interfejs zapewnia również mechanizmy filtrowania danych

    Dostęp do tego interfejsu API ograniczony jest jedynie do Dostawców Usług posiadających stosowne zezwolenie na świadczenie usług AIS lub potwierdzenie złożenia takiego wniosku.

    Do korzystania z interfejsu API wymagany jest ważny certyfikat, służący do wzajemnej identyfikacji w interfejsie XS2A,
    otrzymany od kwalifikowanego dostawcy usług zaufania, spełniającego wymogi regulacyjne w obszarze usługa zaufania oraz identyfikacji elektronicznej.
    Certyfikat ten dodatkowo powinien spełniać wymagania zdefiniowane w RTS oraz specyfikacji technicznej ETSI (TS 119 495).

    Interfejs API został opracowany na podstawie standardu PolishAPI w wersji 2.1.1
    Więcej informacji na temat standardu PolishAPI znajduje się tutaj (https://polishapi.org/)
  x-ibm-name: openapi-account-information-service
  name: ""
basePath: /v2_1_1.1/accounts/v2_1_1.1
schemes:
- https
consumes:
- application/json
produces:
- application/json
tags:
- name: AIS
  description: Account Information Service
parameters:
  authorizationParam:
    name: Authorization
    in: header
    required: true
    type: string
    description: The value of the Authorization header should consist of 'type' +
      'credentials', where for the approach using the 'type' token should be 'Bearer'.
  acceptEncodingParam:
    name: Accept-Encoding
    in: header
    required: true
    type: string
    enum:
    - gzip
    - deflate
    description: Gzip, deflate
  acceptLanguageParam:
    name: Accept-Language
    in: header
    required: true
    type: string
    description: Prefered language of response
  acceptCharsetParam:
    name: Accept-Charset
    in: header
    required: true
    type: string
    enum:
    - utf-8
    description: UTF-8
  xjwsSignatureParam:
    name: X-JWS-SIGNATURE
    in: header
    required: true
    type: string
    description: Detached JWS signature of the body of the payload
  acceptParam:
    name: Accept
    type: string
    required: true
    in: header
    description: Accepted Content-type. Should be set to application/json
  contentTypeParam:
    name: Content-Type
    type: string
    required: true
    in: header
    description: Request Content-type. Should be set to application/json
  xRequestIdParam:
    name: X-REQUEST-ID
    in: header
    required: true
    type: string
    description: Identyfikator żądania w formacie UUID (Wariant 1, Wersja 1), zgodnym
      ze standardem RFC 4122, nadawany przez TPP. Wartość musi być zgodna z parametrem
      requestId przekazywanym w ciele każdego żądania. / Request identifier using
      UUID format (Variant 1, Version 1), described in RFC 4122 standard, set by TPP.
      Value of this header must be the same as for the requestId param passed inside
      request payload.
paths:
  /deleteConsent:
    post:
      summary: Removes consent
      description: Removes consent
      operationId: deleteConsent
      parameters:
      - $ref: '#/parameters/acceptParam'
      - $ref: '#/parameters/contentTypeParam'
      - $ref: '#/parameters/authorizationParam'
      - $ref: '#/parameters/acceptEncodingParam'
      - $ref: '#/parameters/acceptLanguageParam'
      - $ref: '#/parameters/acceptCharsetParam'
      - $ref: '#/parameters/xjwsSignatureParam'
      - $ref: '#/parameters/xRequestIdParam'
      - name: DeleteConsentRequest
        in: body
        description: Data for delete Consent Request
        required: true
        schema:
          $ref: '#/definitions/DeleteConsentRequest'
      tags:
      - AIS
      responses:
        204:
          description: Success
          headers:
            Content-Encoding:
              type: string
              description: Gzip, deflate
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        405:
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/Error'
        406:
          description: Not Acceptable
          schema:
            $ref: '#/definitions/Error'
        415:
          description: Unsupported Media Type
          schema:
            $ref: '#/definitions/Error'
        422:
          description: Unprocessable entity
          schema:
            $ref: '#/definitions/Error'
        429:
          description: Request limit for the requested service exceeded
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
        503:
          description: Service Unavailable
          schema:
            $ref: '#/definitions/Error'
      security:
      - ClientSecret: []
        ClientId: []
  /getAccounts:
    post:
      summary: Get information about all user's payment account
      description: User identification based on access token
      operationId: getAccounts
      parameters:
      - $ref: '#/parameters/acceptParam'
      - $ref: '#/parameters/contentTypeParam'
      - $ref: '#/parameters/authorizationParam'
      - $ref: '#/parameters/acceptEncodingParam'
      - $ref: '#/parameters/acceptLanguageParam'
      - $ref: '#/parameters/acceptCharsetParam'
      - $ref: '#/parameters/xjwsSignatureParam'
      - $ref: '#/parameters/xRequestIdParam'
      - name: getAccountsRequest
        in: body
        description: Data for Accounts Request
        required: true
        schema:
          $ref: '#/definitions/AccountsRequest'
      tags:
      - AIS
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/AccountsResponse'
          headers:
            Content-Encoding:
              type: string
              description: Gzip, deflate
            X-JWS-SIGNATURE:
              type: string
              description: Detached JWS signature of the body of the response
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        405:
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/Error'
        406:
          description: Not Acceptable
          schema:
            $ref: '#/definitions/Error'
        415:
          description: Unsupported Media Type
          schema:
            $ref: '#/definitions/Error'
        422:
          description: Unprocessable entity
          schema:
            $ref: '#/definitions/Error'
        429:
          description: Request limit for the requested service exceeded
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
        503:
          description: Service Unavailable
          schema:
            $ref: '#/definitions/Error'
      security:
      - ClientSecret: []
        ClientId: []
        xs2a_auth_aspsp:
        - ais-accounts
  /getAccount:
    post:
      summary: Get detailed information about user payment account
      description: User identification based on access token
      operationId: getAccount
      parameters:
      - $ref: '#/parameters/acceptParam'
      - $ref: '#/parameters/contentTypeParam'
      - $ref: '#/parameters/authorizationParam'
      - $ref: '#/parameters/acceptEncodingParam'
      - $ref: '#/parameters/acceptLanguageParam'
      - $ref: '#/parameters/acceptCharsetParam'
      - $ref: '#/parameters/xjwsSignatureParam'
      - $ref: '#/parameters/xRequestIdParam'
      - name: getAccountRequest
        in: body
        description: Data for Account Request
        required: true
        schema:
          $ref: '#/definitions/AccountInfoRequest'
      tags:
      - AIS
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/AccountResponse'
          headers:
            Content-Encoding:
              type: string
              description: Gzip, deflate
            X-JWS-SIGNATURE:
              type: string
              description: Detached JWS signature of the body of the response
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        405:
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/Error'
        406:
          description: Not Acceptable
          schema:
            $ref: '#/definitions/Error'
        415:
          description: Unsupported Media Type
          schema:
            $ref: '#/definitions/Error'
        422:
          description: Unprocessable entity
          schema:
            $ref: '#/definitions/Error'
        429:
          description: Request limit for the requested service exceeded
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
        503:
          description: Service Unavailable
          schema:
            $ref: '#/definitions/Error'
      security:
      - ClientSecret: []
        ClientId: []
        xs2a_auth_aspsp:
        - ais
  /getTransactionsDone:
    post:
      summary: Get list of user done transactions
      description: ""
      operationId: getTransactionsDone
      parameters:
      - $ref: '#/parameters/acceptParam'
      - $ref: '#/parameters/contentTypeParam'
      - $ref: '#/parameters/authorizationParam'
      - $ref: '#/parameters/acceptEncodingParam'
      - $ref: '#/parameters/acceptLanguageParam'
      - $ref: '#/parameters/acceptCharsetParam'
      - $ref: '#/parameters/xjwsSignatureParam'
      - $ref: '#/parameters/xRequestIdParam'
      - name: getTransactionsDoneRequest
        in: body
        description: Data for Transactions Done Request
        required: true
        schema:
          $ref: '#/definitions/TransactionInfoRequest'
      tags:
      - AIS
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/TransactionsDoneInfoResponse'
          headers:
            Content-Encoding:
              type: string
              description: Gzip, deflate
            X-JWS-SIGNATURE:
              type: string
              description: Detached JWS signature of the body of the response
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        405:
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/Error'
        406:
          description: Not Acceptable
          schema:
            $ref: '#/definitions/Error'
        415:
          description: Unsupported Media Type
          schema:
            $ref: '#/definitions/Error'
        422:
          description: Unprocessable entity
          schema:
            $ref: '#/definitions/Error'
        429:
          description: Request limit for the requested service exceeded
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
        503:
          description: Service Unavailable
          schema:
            $ref: '#/definitions/Error'
      security:
      - ClientSecret: []
        ClientId: []
        xs2a_auth_aspsp:
        - ais
  /getTransactionsPending:
    post:
      summary: Get list of user's pending transactions
      description: ""
      operationId: getTransactionsPending
      parameters:
      - $ref: '#/parameters/authorizationParam'
      - $ref: '#/parameters/acceptEncodingParam'
      - $ref: '#/parameters/acceptLanguageParam'
      - $ref: '#/parameters/acceptCharsetParam'
      - $ref: '#/parameters/xjwsSignatureParam'
      - $ref: '#/parameters/xRequestIdParam'
      - name: getTransactionsPendingRequest
        in: body
        description: Data for Transactions Pending Request
        required: true
        schema:
          $ref: '#/definitions/TransactionInfoRequest'
      tags:
      - AIS
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/TransactionPendingInfoResponse'
          headers:
            Content-Encoding:
              type: string
              description: Gzip, deflate
            X-JWS-SIGNATURE:
              type: string
              description: Detached JWS signature of the body of the response
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        405:
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/Error'
        406:
          description: Not Acceptable
          schema:
            $ref: '#/definitions/Error'
        415:
          description: Unsupported Media Type
          schema:
            $ref: '#/definitions/Error'
        422:
          description: Unprocessable entity
          schema:
            $ref: '#/definitions/Error'
        429:
          description: Request limit for the requested service exceeded
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
        503:
          description: Service Unavailable
          schema:
            $ref: '#/definitions/Error'
      security:
      - ClientSecret: []
        ClientId: []
        xs2a_auth_aspsp:
        - ais
  /getTransactionsRejected:
    post:
      summary: Get list of user's rejected transactions
      description: ""
      operationId: getTransactionsRejected
      parameters:
      - $ref: '#/parameters/acceptParam'
      - $ref: '#/parameters/contentTypeParam'
      - $ref: '#/parameters/authorizationParam'
      - $ref: '#/parameters/acceptEncodingParam'
      - $ref: '#/parameters/acceptLanguageParam'
      - $ref: '#/parameters/acceptCharsetParam'
      - $ref: '#/parameters/xjwsSignatureParam'
      - $ref: '#/parameters/xRequestIdParam'
      - name: getTransactionsRejectedRequest
        in: body
        description: Data for Transactions Rejected Request
        required: true
        schema:
          $ref: '#/definitions/TransactionInfoRequest'
      tags:
      - AIS
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/TransactionRejectedInfoResponse'
          headers:
            Content-Encoding:
              type: string
              description: Gzip, deflate
            X-JWS-SIGNATURE:
              type: string
              description: Detached JWS signature of the body of the response
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        405:
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/Error'
        406:
          description: Not Acceptable
          schema:
            $ref: '#/definitions/Error'
        415:
          description: Unsupported Media Type
          schema:
            $ref: '#/definitions/Error'
        422:
          description: Unprocessable entity
          schema:
            $ref: '#/definitions/Error'
        429:
          description: Request limit for the requested service exceeded
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
        503:
          description: Service Unavailable
          schema:
            $ref: '#/definitions/Error'
      security:
      - ClientSecret: []
        ClientId: []
        xs2a_auth_aspsp:
        - ais
  /getTransactionsCancelled:
    post:
      summary: Get list of user cancelled transactions
      description: ""
      operationId: getTransactionsCancelled
      parameters:
      - $ref: '#/parameters/authorizationParam'
      - $ref: '#/parameters/acceptEncodingParam'
      - $ref: '#/parameters/acceptLanguageParam'
      - $ref: '#/parameters/acceptCharsetParam'
      - $ref: '#/parameters/xjwsSignatureParam'
      - $ref: '#/parameters/xRequestIdParam'
      - name: getTransactionsCancelledRequest
        in: body
        description: Data for Transactions Cancelled Request
        required: true
        schema:
          $ref: '#/definitions/TransactionInfoRequest'
      tags:
      - AIS
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/TransactionsCancelledInfoResponse'
          headers:
            Content-Encoding:
              type: string
              description: Gzip, deflate
            X-JWS-SIGNATURE:
              type: string
              description: Detached JWS signature of the body of the response
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        405:
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/Error'
        406:
          description: Not Acceptable
          schema:
            $ref: '#/definitions/Error'
        415:
          description: Unsupported Media Type
          schema:
            $ref: '#/definitions/Error'
        422:
          description: Unprocessable entity
          schema:
            $ref: '#/definitions/Error'
        429:
          description: Request limit for the requested service exceeded
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
        503:
          description: Service Unavailable
          schema:
            $ref: '#/definitions/Error'
      security:
      - ClientSecret: []
        ClientId: []
        xs2a_auth_aspsp:
        - ais
  /getTransactionsScheduled:
    post:
      summary: Get list of user scheduled transactions
      description: ""
      operationId: getTransactionsScheduled
      parameters:
      - $ref: '#/parameters/acceptParam'
      - $ref: '#/parameters/contentTypeParam'
      - $ref: '#/parameters/authorizationParam'
      - $ref: '#/parameters/acceptEncodingParam'
      - $ref: '#/parameters/acceptLanguageParam'
      - $ref: '#/parameters/acceptCharsetParam'
      - $ref: '#/parameters/xjwsSignatureParam'
      - $ref: '#/parameters/xRequestIdParam'
      - name: getTransactionsScheduledRequest
        in: body
        description: Data for Transactions Scheduled Request
        required: true
        schema:
          $ref: '#/definitions/TransactionInfoRequest'
      tags:
      - AIS
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/TransactionsScheduledInfoResponse'
          headers:
            Content-Encoding:
              type: string
              description: Gzip, deflate
            X-JWS-SIGNATURE:
              type: string
              description: Detached JWS signature of the body of the response
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        405:
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/Error'
        406:
          description: Not Acceptable
          schema:
            $ref: '#/definitions/Error'
        415:
          description: Unsupported Media Type
          schema:
            $ref: '#/definitions/Error'
        422:
          description: Unprocessable entity
          schema:
            $ref: '#/definitions/Error'
        429:
          description: Request limit for the requested service exceeded
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
        503:
          description: Service Unavailable
          schema:
            $ref: '#/definitions/Error'
      security:
      - ClientSecret: []
        ClientId: []
        xs2a_auth_aspsp:
        - ais
  /getHolds:
    post:
      summary: Get list of user's holded operations
      description: ""
      operationId: getHolds
      parameters:
      - $ref: '#/parameters/acceptParam'
      - $ref: '#/parameters/contentTypeParam'
      - $ref: '#/parameters/authorizationParam'
      - $ref: '#/parameters/acceptEncodingParam'
      - $ref: '#/parameters/acceptLanguageParam'
      - $ref: '#/parameters/acceptCharsetParam'
      - $ref: '#/parameters/xjwsSignatureParam'
      - $ref: '#/parameters/xRequestIdParam'
      - name: getHoldsRequest
        in: body
        description: Data for hold Request
        required: true
        schema:
          $ref: '#/definitions/HoldRequest'
      tags:
      - AIS
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/HoldInfoResponse'
          headers:
            Content-Encoding:
              type: string
              description: Gzip, deflate
            X-JWS-SIGNATURE:
              type: string
              description: Detached JWS signature of the body of the response
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        405:
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/Error'
        406:
          description: Not Acceptable
          schema:
            $ref: '#/definitions/Error'
        415:
          description: Unsupported Media Type
          schema:
            $ref: '#/definitions/Error'
        422:
          description: Unprocessable entity
          schema:
            $ref: '#/definitions/Error'
        429:
          description: Request limit for the requested service exceeded
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
        503:
          description: Service Unavailable
          schema:
            $ref: '#/definitions/Error'
      security:
      - ClientSecret: []
        ClientId: []
        xs2a_auth_aspsp:
        - ais
  /getTransactionDetail:
    post:
      summary: Get detailed information about user's single transaction
      description: ""
      operationId: getTransactionDetail
      parameters:
      - $ref: '#/parameters/acceptParam'
      - $ref: '#/parameters/contentTypeParam'
      - $ref: '#/parameters/authorizationParam'
      - $ref: '#/parameters/acceptEncodingParam'
      - $ref: '#/parameters/acceptLanguageParam'
      - $ref: '#/parameters/acceptCharsetParam'
      - $ref: '#/parameters/xjwsSignatureParam'
      - $ref: '#/parameters/xRequestIdParam'
      - name: getTransationDetailRequest
        in: body
        description: Data for transation detail Request
        required: true
        schema:
          $ref: '#/definitions/TransactionDetailRequest'
      tags:
      - AIS
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/TransactionDetailResponse'
          headers:
            Content-Encoding:
              type: string
              description: Gzip, deflate
            X-JWS-SIGNATURE:
              type: string
              description: Detached JWS signature of the body of the response
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        405:
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/Error'
        406:
          description: Not Acceptable
          schema:
            $ref: '#/definitions/Error'
        415:
          description: Unsupported Media Type
          schema:
            $ref: '#/definitions/Error'
        422:
          description: Unprocessable entity
          schema:
            $ref: '#/definitions/Error'
        429:
          description: Request limit for the requested service exceeded
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
        503:
          description: Service Unavailable
          schema:
            $ref: '#/definitions/Error'
      security:
      - ClientSecret: []
        ClientId: []
        xs2a_auth_aspsp:
        - ais
securityDefinitions:
  ClientId:
    description: ""
    in: header
    name: X-IBM-Client-Id
    type: apiKey
  ClientSecret:
    description: ""
    in: header
    name: X-IBM-Client-Secret
    type: apiKey
  xs2a_auth_aspsp:
    authorizationUrl: https://https://api.sandbox.pekao.com.pl/v2_1_1.1/auth/v2_1_1.1/authorize
    description: ""
    flow: accessCode
    scopes:
      ais: Permission to execute methods of Account Information Service in context
        of particular account
      ais-accounts: Permission to retrieve the list of accounts through Account Information
        Service
    tokenUrl: https://https://api.sandbox.pekao.com.pl/v2_1_1.1/technical/authorization/oauth2/token
    type: oauth2
definitions:
  DeleteConsentRequest:
    description: Klasa zapytania o usunięcie zgody na dostęp do AIS
    type: object
    required:
    - requestHeader
    - consentId
    properties:
      requestHeader:
        $ref: '#/definitions/RequestHeaderWithoutToken'
      consentId:
        type: string
        minLength: 1
        description: Identyfikator zgody / Consent ID
    xml:
      name: DeleteConsentRequest
  AccountsRequest:
    description: Klasa zapytania o rachunki / Accounts Request Class
    type: object
    required:
    - requestHeader
    properties:
      requestHeader:
        $ref: '#/definitions/RequestHeaderAISCallback'
      pageId:
        type: string
        description: 'Używane w celu stronicowania danych: identyfikator strony, która
          ma zostać zwrócona w odpowiedzi / Used for paging the results. Identifier
          of the page to be returned in the response.'
      perPage:
        type: integer
        format: int32
        minimum: 1
        description: 'Używane w celu stronicowania danych: wielkość strony danych
          / Page size (paging info)'
    xml:
      name: AccountsRequest
  AccountResponse:
    description: Klasa odpowiedzi na zapytania o konto PSU / PSU's Account Response
      Class
    required:
    - responseHeader
    properties:
      responseHeader:
        $ref: '#/definitions/ResponseHeader'
      account:
        $ref: '#/definitions/AccountInfo'
  AccountsResponse:
    description: Klasa odpowiedzi na zapytania o wiele kont PSU / PSU's Multiple Accounts
      Response Class
    required:
    - responseHeader
    properties:
      responseHeader:
        $ref: '#/definitions/ResponseHeader'
      accounts:
        type: array
        items:
          $ref: '#/definitions/AccountBaseInfo'
      pageInfo:
        $ref: '#/definitions/PageInfo'
  AccountBaseInfo:
    description: Klasa informacji o koncie / Account Information Class
    type: object
    required:
    - accountNumber
    - accountTypeName
    - accountType
    properties:
      accountNumber:
        type: string
        description: Numer rachunku (częściowo zamaskowany) / Account number (partly
          masked)
      accountTypeName:
        type: string
        maxLength: 32
        description: Nazwa typu rachunku (definiowana przez ASPSP) / Account's type
          name (defined by ASPSP)
      accountType:
        $ref: '#/definitions/DictionaryItem'
    xml:
      name: AccountBaseInfo
  AccountInfo:
    description: Klasa informacji o koncie / Account Information Class
    type: object
    required:
    - accountNumber
    - nameAddress
    - availableBalance
    - bookingBalance
    - currency
    - accountType
    - accountHolderType
    properties:
      accountNumber:
        type: string
        description: Numer rachunku / Account number
      nameAddress:
        $ref: '#/definitions/NameAddress'
      accountType:
        $ref: '#/definitions/DictionaryItem'
      accountTypeName:
        type: string
        maxLength: 32
        description: Nazwa typu rachunku (definiowana przez ASPSP) / Account's type
          name (defined by ASPSP)
      accountHolderType:
        type: string
        enum:
        - individual
        - corporation
        description: 'Rodzaj posiadacza rachunku: osoba fizyczna lub osoba prawna
          / Account holder type: individual person or corporation'
      accountNameClient:
        type: string
        maxLength: 32
        description: Nazwa konta ustawiona przez klienta / Account name set by the
          client
      currency:
        type: string
        maxLength: 3
        description: Waluta rachunku / Currency
      availableBalance:
        type: string
        pattern: ^(0|([1-9][0-9]{0,}))\.\d{2}$
        description: Dostępne środki - po wykonaniu transakcji / Available funds
      bookingBalance:
        type: string
        pattern: ^-?(0|([1-9][0-9]{0,}))\.\d{2}$
        description: Saldo księgowe rachunku - po wykonaniu transakcji / Book balance
          of the account
      bank:
        $ref: '#/definitions/BankAccountInfo'
      auxData:
        $ref: '#/definitions/Map'
    xml:
      name: AccountInfo
  AccountInfoRequest:
    description: Klasa zapytania o pojedynczy rachunek / Account Information Request
      Class
    type: object
    required:
    - requestHeader
    - accountNumber
    properties:
      requestHeader:
        $ref: '#/definitions/RequestHeaderAIS'
      accountNumber:
        type: string
        minLength: 1
        maxLength: 34
        description: Numer rachunku w formacie IBAN / Account number (IBAN)
    xml:
      name: AccountInfoRequest
  ItemInfoRequestBase:
    description: Bazowa klasa dla zapytań o elementy takie jak transakcja i blokada
      / Element (transaction or hold) Information Request Base Class
    type: object
    properties:
      requestHeader:
        $ref: '#/definitions/RequestHeaderAISCallback'
      accountNumber:
        type: string
        minLength: 1
        maxLength: 34
        description: Numer rachunku w formacie IBAN / Account number (IBAN)
      itemIdFrom:
        type: string
        maxLength: 64
        description: 'Element filtru: elementy od podanego identyfikatora (transakcji
          lub blokady) / Filter element - id of transaction or hold to start from'
      transactionDateFrom:
        type: string
        format: date
        maxLength: 10
        description: 'Element filtru: data transakcji od, YYYY-MM-DD. Ignorowane w
          przypadku pobierania listy transakcji done. / Filter element. Ignored during
          list of transactions done retrieval.'
      transactionDateTo:
        type: string
        format: date
        maxLength: 10
        description: 'Element filtru: data transakcji do, YYYY-MM-DD. Ignorowane w
          przypadku pobierania listy transakcji done. / Filter element. Ignored during
          list of transactions done retrieval.'
      bookingDateFrom:
        type: string
        format: date
        maxLength: 10
        description: |-
          Element filtru: data księgowania od, YYYY-MM-DD. Ignorowane w przypadku pobierania listy blokad, transakcji odrzuconych i transakcji zaplanowanych. / Filter element. Ignored during list of holds, list of transactions rejected and list of
          transactions scheduled retrieval.
      bookingDateTo:
        type: string
        format: date
        maxLength: 10
        description: |-
          Element filtru: data księgowania do, YYYY-MM-DD. Ignorowane w przypadku pobierania listy blokad, transakcji odrzuconych i transakcji zaplanowanych. / Filter element. Ignored during list of holds, list of transactions rejected and list of
          transactions scheduled retrieval.
      minAmount:
        type: string
        pattern: ^(0|([1-9][0-9]{0,}))\.\d{2}$
        description: 'Element filtru: kwota od / Filter element'
      maxAmount:
        type: string
        pattern: ^(0|([1-9][0-9]{0,}))\.\d{2}$
        description: 'Element filtru: kwota do / Filter element'
      pageId:
        type: string
        description: 'Używane w celu stronicowania danych: identyfikator strony, która
          ma zostać zwrócona w odpowiedzi / Used for paging the results. Identifier
          of the page to be returned in the response.'
      perPage:
        type: integer
        format: int32
        minimum: 1
        description: 'Używane w celu stronicowania danych: wielkość strony danych
          / Page size (paging info)'
    xml:
      name: ItemInfoRequestBase
  TransactionInfoRequest:
    description: Klasa zapytania o transakcje / Transaction Information Request Class
    allOf:
    - $ref: '#/definitions/ItemInfoRequestBase'
    - type: object
      required:
      - requestHeader
      - accountNumber
      properties:
        type:
          type: string
          enum:
          - CREDIT
          - DEBIT
          description: 'Element filtru: transakcji / Filter element'
    xml:
      name: TransactionInfoRequest
  HoldRequest:
    description: Klasa zapytania o elementy (transakcje lub blokady) / Element (transaction
      or hold) Information Request Class
    allOf:
    - $ref: '#/definitions/ItemInfoRequestBase'
    - type: object
      required:
      - requestHeader
      - accountNumber
      properties:
        type:
          type: string
          enum:
          - DEBIT
          description: 'Element filtru: transakcji / Filter element'
    xml:
      name: HoldRequest
  ItemInfoBase:
    description: Klasa bazowa informacji o elemencie (transakcji lub blokadzie) /
      Element (transaction or hold) Information Base Class
    type: object
    required:
    - itemId
    - amount
    properties:
      itemId:
        type: string
        maxLength: 64
        description: ID elementu (transakcji lub blokadzie) nadany przez ASPSP / Element
          (transaction or hold) ID (ASPSP)
      amount:
        type: string
        pattern: ^(0|([1-9][0-9]{0,}))\.\d{2}$
        description: Kwota transakcji / Amount of the transaction
      currency:
        type: string
        maxLength: 3
        description: Kod ISO waluty transakcji / Currency (ISO)
      description:
        type: string
        maxLength: 140
        description: Tytuł transakcji / Description of the transaction
      transactionType:
        type: string
        maxLength: 100
        description: Typ transakcji / Transaction type
      tradeDate:
        type: string
        format: date-time
        description: Data operacji, YYYY-MM-DDThh:mm:ss[.mmm] / Date of the operation
      mcc:
        type: string
        description: Kod dla każdej transakcji/operacji wykonanej przy użyciu karty
          / A code of each transaction performed by card
      auxData:
        $ref: '#/definitions/Map'
  TransactionInfo:
    description: Klasa opisująca transakcję płatniczą
    allOf:
    - $ref: '#/definitions/ItemInfoBase'
    - type: object
      required:
      - itemId
      - amount
      - transactionCategory
      properties:
        transactionCategory:
          type: string
          enum:
          - CREDIT
          - DEBIT
          description: Kategoria transakcji uznanie/obciążenie / Transaction category
            (credit/debit)
        transactionStatus:
          $ref: '#/definitions/DictionaryItem'
        initiator:
          $ref: '#/definitions/NameAddress'
        sender:
          $ref: '#/definitions/SenderRecipient'
        recipient:
          $ref: '#/definitions/SenderRecipient'
        bookingDate:
          type: string
          format: date-time
          description: Data księgowania, YYYY-MM-DDThh:mm:ss[.mmm]. Wymagane warunkowo
            - w przypadku transakcji zaksięgowanych.
        postTransactionBalance:
          type: string
          pattern: ^-?(0|([1-9][0-9]{0,}))\.\d{2}$
          description: Saldo rachunku po transakcji. Wymagane warunkowo - w przypadku
            transakcji zaksięgowanych.
    xml:
      name: TransactionInfo
  TransactionRejectedInfo:
    description: Klasa opisująca odrzuconą transakcję płatniczą
    allOf:
    - $ref: '#/definitions/ItemInfoBase'
    - type: object
      required:
      - itemId
      - amount
      - transactionCategory
      properties:
        transactionCategory:
          type: string
          enum:
          - CREDIT
          - DEBIT
          description: Kategoria transakcji uznanie/obciążenie / Transaction category
            (credit/debit)
        initiator:
          $ref: '#/definitions/NameAddress'
        sender:
          $ref: '#/definitions/SenderRecipient'
        recipient:
          $ref: '#/definitions/SenderRecipient'
        rejectionReason:
          type: string
          maxLength: 140
          description: Powod odrzucenia
        rejectionDate:
          type: string
          format: date-time
          description: Data odrzucenia, YYYY-MM-DDThh:mm:ss[.mmm]
    xml:
      name: TransactionRejectedInfo
  TransactionScheduledInfo:
    description: Klasa opisująca transakcję płatniczą
    allOf:
    - $ref: '#/definitions/ItemInfoBase'
    - type: object
      required:
      - itemId
      - amount
      - transactionCategory
      properties:
        transactionCategory:
          type: string
          enum:
          - CREDIT
          - DEBIT
          description: Kategoria transakcji uznanie/obciążenie / Transaction category
            (credit/debit)
        transactionStatus:
          $ref: '#/definitions/DictionaryItem'
        initiator:
          $ref: '#/definitions/NameAddress'
        sender:
          $ref: '#/definitions/SenderRecipient'
        recipient:
          $ref: '#/definitions/SenderRecipient'
    xml:
      name: TransactionScheduledInfo
  HoldInfo:
    description: Klasa opisująca blokadę na rachunku / Hold info class
    allOf:
    - $ref: '#/definitions/ItemInfoBase'
    - type: object
      required:
      - itemId
      - amount
      properties:
        holdExpirationDate:
          type: string
          format: date-time
          description: Data ważności blokady, YYYY-MM-DDThh:mm:ss[.mmm]
        initiator:
          $ref: '#/definitions/NameAddress'
        sender:
          $ref: '#/definitions/SenderRecipient'
        recipient:
          $ref: '#/definitions/SenderRecipient'
    xml:
      name: HoldInfo
  TransactionPendingInfo:
    description: Klasa opisująca oczekującą transakcję płatniczą. Jest to transakcja
      niezaksięgowana, niemodyfikowalna, wpływającej na dostępne środki (saldo dostępne).
    allOf:
    - $ref: '#/definitions/ItemInfoBase'
    - type: object
      required:
      - itemId
      - amount
      - transactionCategory
      properties:
        transactionCategory:
          type: string
          enum:
          - CREDIT
          - DEBIT
          description: Kategoria transakcji uznanie/obciążenie / Transaction category
            (credit/debit)
        initiator:
          $ref: '#/definitions/NameAddress'
        sender:
          $ref: '#/definitions/SenderRecipient'
        recipient:
          $ref: '#/definitions/SenderRecipient'
    xml:
      name: TransactionPendingInfo
  TransactionCancelledInfo:
    description: Klasa opisująca odwołaną transakcję płatniczą
    allOf:
    - $ref: '#/definitions/ItemInfoBase'
    - type: object
      required:
      - itemId
      - amount
      - transactionCategory
      properties:
        transactionCategory:
          type: string
          enum:
          - CREDIT
          - DEBIT
          description: Kategoria transakcji uznanie/obciążenie / Transaction category
            (credit/debit)
        transactionStatus:
          $ref: '#/definitions/DictionaryItem'
        initiator:
          $ref: '#/definitions/NameAddress'
        sender:
          $ref: '#/definitions/SenderRecipient'
        recipient:
          $ref: '#/definitions/SenderRecipient'
    xml:
      name: TransactionCancelledInfo
  TransactionsDoneInfoResponse:
    description: Klasa odpowiedzi zawierająca listę transakcji done / Done Transaction
      Information Response Class
    required:
    - responseHeader
    properties:
      responseHeader:
        $ref: '#/definitions/ResponseHeader'
      transactions:
        type: array
        items:
          $ref: '#/definitions/TransactionInfo'
      pageInfo:
        $ref: '#/definitions/PageInfo'
    xml:
      name: TransactionsDoneInfoResponse
  TransactionRejectedInfoResponse:
    description: Klasa odpowiedzi zawierająca listę transakcji rejected / Rejected
      Transaction Information Response Class
    required:
    - responseHeader
    properties:
      responseHeader:
        $ref: '#/definitions/ResponseHeader'
      transactions:
        type: array
        items:
          $ref: '#/definitions/TransactionRejectedInfo'
      pageInfo:
        $ref: '#/definitions/PageInfo'
    xml:
      name: TransactionRejectedInfoResponse
  TransactionsCancelledInfoResponse:
    description: Klasa odpowiedzi zawierająca listę transakcji cancelled / Cancelled
      Transaction Information Response Class
    required:
    - responseHeader
    properties:
      responseHeader:
        $ref: '#/definitions/ResponseHeader'
      transactions:
        type: array
        items:
          $ref: '#/definitions/TransactionCancelledInfo'
      pageInfo:
        $ref: '#/definitions/PageInfo'
    xml:
      name: TransactionsCancelledInfoResponse
  TransactionsScheduledInfoResponse:
    description: Klasa odpowiedzi zawierająca listę transakcji rejected / Rejected
      Transaction Information Response Class
    required:
    - responseHeader
    properties:
      responseHeader:
        $ref: '#/definitions/ResponseHeader'
      transactions:
        type: array
        items:
          $ref: '#/definitions/TransactionScheduledInfo'
      pageInfo:
        $ref: '#/definitions/PageInfo'
    xml:
      name: TransactionsScheduledInfoResponse
  TransactionPendingInfoResponse:
    description: Klasa odpowiedzi zawierająca listę transakcji pending / Pending Transaction
      Information Response Class
    required:
    - responseHeader
    properties:
      responseHeader:
        $ref: '#/definitions/ResponseHeader'
      transactions:
        type: array
        items:
          $ref: '#/definitions/TransactionPendingInfo'
      pageInfo:
        $ref: '#/definitions/PageInfo'
    xml:
      name: TransactionPendingInfoResponse
  HoldInfoResponse:
    description: Klasa odpowiedzi zawierająca listę blokad na rachunku / Hold Information
      Response Class
    required:
    - responseHeader
    properties:
      responseHeader:
        $ref: '#/definitions/ResponseHeader'
      holds:
        type: array
        items:
          $ref: '#/definitions/HoldInfo'
      pageInfo:
        $ref: '#/definitions/PageInfo'
    xml:
      name: HoldInfoResponse
  TransactionDetailRequest:
    description: Klasa zapytania o pojedynczą transakcję / Transaction Detail Request
      Class
    type: object
    required:
    - requestHeader
    - itemId
    - accountNumber
    properties:
      requestHeader:
        $ref: '#/definitions/RequestHeaderAIS'
      itemId:
        type: string
        maxLength: 64
        description: ID elementu (transakcji lub blokadzie) nadany przez ASPSP / Element
          (transaction or hold) ID (ASPSP)
      accountNumber:
        type: string
        minLength: 1
        maxLength: 34
        description: Numer konta nadawcy w formacie IBAN / Sender account number (IBAN)
      bookingDate:
        type: string
        format: date-time
        description: Data zaksięgowania operacji, YYYY-MM-DDThh:mm:ss[.mmm] / Transaction
          booking date
    xml:
      name: TransactionDetailRequest
  Payor:
    description: Klasa informacji o płatniku do US / Tax Payor Information Class
    type: object
    required:
    - payorId
    - payorIdType
    properties:
      payorId:
        type: string
        maxLength: 20
        description: Identyfikator płatnika / Payor ID
      payorIdType:
        type: string
        description: Typ identyfikatora płatnika / Payor ID type
        enum:
        - "N"
        - P
        - R
        - "1"
        - "2"
        - "3"
        x-ms-enum:
          name: payorIdType
          values:
          - value: "N"
            description: NIP
          - value: P
            description: Pesel
          - value: R
            description: Regon
          - value: "1"
            description: Dowód osobisty
          - value: "2"
            description: Paszport
          - value: "3"
            description: Inny
    xml:
      name: Payor
  SocialSecurityPayor:
    description: Klasa informacji o płatniku do ZUS / Polish Social Security Institution
      (ZUS) Payor Information Class
    type: object
    properties:
      nip:
        type: string
        maxLength: 10
        description: Numer Identyfikacji Podatkowej / Payor's Tax Identification Number
      additionalPayorId:
        type: string
        maxLength: 20
        description: Dodatkowy numer identyfikacyjny płatnika / Payor's additional
          identification number
      additionalPayorIdType:
        type: string
        description: Typ dodatkowego identyfikatora płatnika / Payor's additional
          identifier type
        enum:
        - P
        - R
        - "1"
        - "2"
        x-ms-enum:
          name: additionalPayorIdType
          values:
          - value: P
            description: Pesel
          - value: R
            description: Regon
          - value: "1"
            description: Dowód osobisty
          - value: "2"
            description: Paszport
    xml:
      name: SocialSecurityPayor
  TransactionInfoZUS:
    description: Klasa informacji danych dla przelewu do ZUS / ZUS Transfer Information
      Class
    type: object
    properties:
      payerInfo:
        $ref: '#/definitions/SocialSecurityPayor'
      contributionType:
        type: string
        maxLength: 1
        description: Typ wpłaty / Contribution type
      contributionId:
        type: string
        maxLength: 2
        description: Numer deklaracji / Contribution identifier
      contributionPeriod:
        type: string
        maxLength: 6
        description: 'Okres deklaracji / Contribution period, Format: MMYYYY'
      paymentTypeId:
        type: string
        maxLength: 1
        description: Identyfikator typu płatności / Payment type ID
      obligationId:
        type: string
        maxLength: 40
        description: Numer tytułu wykonawczego / Obligation identifier or number
    xml:
      name: TransactionInfoZUS
  TransactionInfoTax:
    description: Klasa informacji danych dla przelewu podatkowego do Urzędu Skarbowego
      lub Izby Celnej / Tax Transfer
    type: object
    required:
    - payerInfo
    - formCode
    properties:
      payerInfo:
        $ref: '#/definitions/Payor'
      formCode:
        type: string
        maxLength: 7
        description: Symbol formularza Urzędu Skarbowego lub Izby Celnej / Tax authority
          form symbol
      periodId:
        type: string
        maxLength: 7
        description: Numer okresu. Wymagany warunkowo - w zależności od wartości parametru
          formCode. / Period number. Required conditionally - depending on formCode
          parameter value.
      periodType:
        type: string
        maxLength: 7
        description: Typ okresu. Wymagany warunkowo - w zależności od wartości parametru
          formCode. / Period type. Required conditionally - depending on formCode
          parameter value.
      year:
        type: integer
        format: int32
        maximum: 9999
        description: Rok okresu. Wymagany warunkowo - w zależności od wartości parametru
          formCode. / Period year. Required conditionally - depending on formCode
          parameter value.
      obligationId:
        type: string
        maxLength: 40
        description: Identyfikator zobowiązania, z którego wynika należność podatku
          np. decyzja, tytuł wykonawczy, postanowienie / Obligation ID
    xml:
      name: TransactionInfoTax
  TransactionInfoCard:
    type: object
    description: Klasa reprezentująca informacje o karcie w ramach transakcji / Transaction
      Card Information Class
    properties:
      cardHolder:
        type: string
        description: Właściciel karty / Card holder
      cardNumber:
        type: string
        description: Numer karty / Card number
  TransactionDetailResponse:
    description: Klasa odpowiedzi na zapytanie o transakcję /  Transaction Detail
      Response Class
    type: object
    required:
    - responseHeader
    - baseInfo
    properties:
      responseHeader:
        $ref: '#/definitions/ResponseHeader'
      baseInfo:
        $ref: '#/definitions/TransactionInfo'
      zusInfo:
        $ref: '#/definitions/TransactionInfoZUS'
      usInfo:
        $ref: '#/definitions/TransactionInfoTax'
      cardInfo:
        $ref: '#/definitions/TransactionInfoCard'
      currencyDate:
        type: string
        format: date-time
        description: Data kursu waluty, YYYY-MM-DDThh:mm:ss[.mmm] / Date of the currency
          exchange rate
      transactionRate:
        type: array
        items:
          $ref: '#/definitions/CurrencyRate'
      baseCurrency:
        type: string
        maxLength: 3
        description: Waluta oryginalna transakcji, kod ISO / Currency of the transaction,
          ISO code
      amountBaseCurrency:
        type: string
        pattern: ^(0|([1-9][0-9]{0,}))\.\d{2}$
        description: Kwota w oryginalnej walucie / Amount of the transaction
      usedPaymentInstrumentId:
        type: string
        maxLength: 32
        description: Unikalny identyfikator instrumentu płatniczego, za którego pomocą
          wykonano transakcję / Payment Instrument ID
      tppTransactionId:
        type: string
        maxLength: 64
        description: Unikalny identyfikator transakcji po stronie TPP / Transaction
          ID (TPP)
      tppName:
        type: string
        maxLength: 32
        description: Nazwa TPP / TPP name
      rejectionReason:
        type: string
        maxLength: 140
        description: Przyczyna odrzucenia / Reason for rejection
      holdExpirationDate:
        type: string
        format: date-time
        description: Data ważności blokady, YYYY-MM-DDThh:mm:ss[.mmm] / Hold expiration
          date
    xml:
      name: TransactionDetailResponse
  Error:
    description: Klasa zawierająca informacje o zwracanym błędzie / Error class
    properties:
      responseHeader:
        $ref: '#/definitions/ResponseHeader'
      code:
        type: string
        description: Kod błędu / Error code
      message:
        type: string
        description: Opis błędu / Error message
  RequestHeaderWithoutToken:
    description: Klasa zawierająca informacje o PSU / PSU Information Class
    type: object
    required:
    - requestId
    properties:
      requestId:
        type: string
        format: uuid
        description: Identyfikator żądania w formacie UUID (Wariant 1, Wersja 1) zgodnym
          ze standardem RFC 4122 / Request ID using UUID format (Variant 1, Version
          1) described in RFC 4122 standard
      userAgent:
        type: string
        description: Browser agent dla PSU / PSU browser agent
      ipAddress:
        type: string
        description: Adres IP końcowego urządzenia PSU. Wymagany dla isDirectPsu=true.
          / IP address of PSU's terminal device. Required when isDirectPsu=true.
      sendDate:
        type: string
        format: date-time
        description: 'Oryginalna data wysłania, format: YYYY-MM-DDThh:mm:ss[.mmm]
          / Send date'
      tppId:
        type: string
        description: Identyfikator TPP (jeśli obecny, wartość zgodna z OID 2.5.4.97
          dla certyfikatów QSealC i QWac wykorzystanych przez TPP)/ TPP ID (if present,
          value should match OID 2.5.4.97 for QSealC and QWac certificates used by
          TPP)
  RequestHeaderAIS:
    description: Klasa zawierająca informacje o PSU / PSU Information Class
    allOf:
    - $ref: '#/definitions/RequestHeaderWithoutToken'
    - type: object
      required:
      - token
      properties:
        token:
          type: string
          description: Token autoryzacyjny (wartość zgodna tokenem przekazanym w nagłówku
            Authorization) / Authorization token (should match token passed in Authorization
            header)
        isDirectPsu:
          type: boolean
          description: (true/false) Znacznik informujący czy request jest przesłany
            bezpośrednio przez PSU. Domyślna wartość to false. / Is request sent by
            PSU directly. false is default value.
  RequestHeaderAISCallback:
    description: Klasa zawierająca informacje o PSU and callback URL / PSU and callback
      URL Information Class
    allOf:
    - $ref: '#/definitions/RequestHeaderWithoutToken'
    - type: object
      required:
      - token
      properties:
        token:
          type: string
          description: Token autoryzacyjny (wartość zgodna tokenem przekazanym w nagłówku
            Authorization) / Authorization token (should match token passed in Authorization
            header)
        isDirectPsu:
          type: boolean
          description: (true/false) Znacznik informujący czy request jest przesłany
            bezpośrednio przez PSU. Domyślna wartość to false. / Is request sent by
            PSU directly. false is default value.
        callbackURL:
          type: string
          description: adres funkcji zwrotnej / callback URL
        apiKey:
          type: string
          description: API key dla wywołania funkcji zwrotnej / callback API key
  ResponseHeader:
    description: Klasa zawierająca zwrotne metadane / Metadata Class
    properties:
      requestId:
        type: string
        format: uuid
        description: Identyfikator żądania otrzymanego od TPP / Identifier of request
          received from TPP
      sendDate:
        type: string
        format: date-time
        description: 'Data odpowiedzi, format: YYYY-MM-DDThh:mm:ss[.mmm] / Send date'
      isCallback:
        type: boolean
        description: Znacznik określający czy odpowiedz zostanie przekazana w formie
          wywołania zwrotnego. true - gdy odpowiedz w formie wywołania zwrotnego.
          Inna dopuszczalna wartość to false.
  Bank:
    description: Klasa zawierająca dane banku używana w żądaniach AIS / AIS Bank Data
      Class
    properties:
      bicOrSwift:
        type: string
        maxLength: 11
        description: Numer BIC/SWIFT Banku / BIC/SWIFT number
      name:
        type: string
        maxLength: 70
        description: Nazwa Banku / Bank's name
      code:
        type: string
        maxLength: 10
        description: Kod Banku, dla przelewów zagranicznych / Bank's code
      countryCode:
        type: string
        maxLength: 3
        description: Kod kraju 3166-1 / Country code
      address:
        $ref: '#/definitions/Address'
  BankAccountInfo:
    description: Klasa zawierająca dane banku / Bank Data Class
    properties:
      bicOrSwift:
        type: string
        maxLength: 8
        description: Numer BIC/SWIFT Banku / BIC/SWIFT number
      name:
        type: string
        maxLength: 70
        description: Nazwa Banku / Bank's name
      address:
        $ref: '#/definitions/Address'
  SenderRecipient:
    description: Klasa zawierająca dane nadawcy/odbiorcy używana w żądaniach AIS /
      AIS Sender Recipient Data Class
    properties:
      accountNumber:
        type: string
        description: Numer konta nadawcy/odbiorcy / Account number
      accountMassPayment:
        type: string
        description: Numer wirtualny rachunku odbiorcy w formacie / Virtual account
          name
      bank:
        $ref: '#/definitions/Bank'
      nameAddress:
        $ref: '#/definitions/NameAddress'
  Address:
    description: Klasa zawierająca dane adresu pocztowego / Postal address Class
    type: array
    minItems: 1
    maxItems: 4
    items:
      type: string
      maxLength: 35
  NameAddress:
    description: Klasa zawierająca dane nazwy i adresu w postaci czterech linii danych
      (pierwsza linia – nazwa, pozostałe linie adres) / Simple name and  postal address
      Class (first line is name, other lines are address lines)
    properties:
      value:
        type: array
        minItems: 1
        maxItems: 4
        items:
          type: string
          maxLength: 35
  PageInfo:
    description: Klasa zawierająca dane pozwalajace na korzystanie z mechanizmu stronicowania
      / Paging Information Class
    properties:
      previousPage:
        type: string
        description: 'Użyte w celu stronicowania danych: Identyfikator poprzedniej
          strony rezultatów / Used for paging the results. Identifier of the previous
          page.'
      nextPage:
        type: string
        description: 'Użyte w celu stronicowania danych:  Identyfikator następnej
          strony rezultatów / Used for paging the results. Identifier of the next
          page.'
  CurrencyRate:
    description: Klasa zawierająca kursy przewalutowań / Currency rate
    properties:
      rate:
        type: number
        format: double
        pattern: ^(0|([1-9][0-9]{0,}))(\.[0-9]{1,7})?$
        description: Kursy przewalutowania / Currency exchange rate
      fromCurrency:
        type: string
        maxLength: 3
        description: Waluta rachunku, kod ISO / from Currency, ISO code
      toCurrency:
        type: string
        maxLength: 3
        description: Waluta rachunku, kod ISO / to Currency, ISO code
  DictionaryItem:
    description: Klasa zawierająca dane elementu/pozycji słownika / Dictionary Item
      Class
    properties:
      code:
        type: string
        description: Kod pozycji słownika / Code
      description:
        type: string
        description: Opis pozycji słownika / Description
  Map:
    description: Klasa mapy <string, string> / Map (Dictionary) class
    type: object
    additionalProperties:
      type: string
x-ibm-configuration:
  enforced: true
  testable: true
  phase: realized
x-ibm-endpoints:
- endpointUrl: https://api.sandbox.pekao.com.pl
  type:
  - development
...
